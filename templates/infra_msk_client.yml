AWSTemplateFormatVersion: "2010-09-09"
Description: "PoC Stack for Managed Kafka Clients"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          Parameters:
            - KeyPair

Parameters:
  ProjectName:
    Type: String
    Description: Project Name

  EC2Ami:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: EC2 AMI ID
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  VpcCIDR:
    Description: Please enter the CIDR IP range (*.*.*.*/*) for this VPC
    Type: String
    Default: 10.1.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the CIDR IP range (*.*.*.*/*) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.1.0.0/19

  PrivateSubnet1CIDR:
    Description: Please enter the CIDR IP range (*.*.*.*/*) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.1.64.0/19

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "EC2 Key Pair to allow SSH access to the host"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref ProjectName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ProjectName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} Public Subnet (AZ1)"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} Private Subnet (AZ1)"

  ClientGrpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the MSK Client Group Cluster"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} Public Routes"

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} Private Routes (AZ1)"

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  CloudMapNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: !Sub "content.local"
      Vpc: !Ref VPC

  ClientGrp:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2Ami
      InstanceType: t3.small
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref ClientGrpSecurityGroup
      SubnetId: !Ref PublicSubnet1
      UserData:
        Fn::Base64: "#!/bin/bash\nyum update -y \nyum install java-1.8.0-openjdk-devel -y\ncd /home/ec2-user\necho \"export PATH=.local/bin:$PATH\" >> .bash_profile\nmkdir kafka\ncd kafka\nwget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz\ntar -xzf kafka_2.12-2.2.1.tgz\ncd /home/ec2-user\ncurl -O http://packages.confluent.io/archive/5.3/confluent-5.3.1-2.12.zip\nunzip confluent-5.3.1-2.12.zip\n"

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectName}:VPC"

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectName}:PublicSubnet1"

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}:PrivateSubnet1"

  VpcCIDR:
    Description: VPC CIDR
    Value: !Ref VpcCIDR
    Export:
      Name: !Sub "${ProjectName}:VpcCIDR"

  CloudMapNamespaceId:
    Description: The id of to the Cloud Map namespace
    Value: !GetAtt CloudMapNamespace.Id
    Export:
      Name: !Sub "${ProjectName}:CloudMapNamespaceId"

  ClientGrpIp:
    Description: The ip address of the host
    Value: !GetAtt ClientGrp.PublicIp
    Export:
      Name: !Sub "${ProjectName}:ClientGrpIp"

  ClientGrpSecurityGroupID:
    Description: The ID of the security group created for the MSK clusters
    Value: !GetAtt
      - ClientGrpSecurityGroup
      - GroupId